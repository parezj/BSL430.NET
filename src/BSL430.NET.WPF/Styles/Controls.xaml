<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:BSL430_NET_FW="clr-namespace:BSL430_NET.FirmwareTools;assembly=BSL430.NET.FirmwareTools"
                    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                    xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
    </ResourceDictionary.MergedDictionaries>

    
    <Style x:Key="CustomMetroTabItem" TargetType="TabItem" BasedOn="{StaticResource MetroTabItem}">
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border x:Name="grid" Padding="5">
                        <ContentPresenter>
                            <ContentPresenter.Content>
                                <DockPanel LastChildFill="True" Margin="10,0,10,0">
                                    <iconPacks:PackIconEntypo Margin="0,0,5,0" 
                                                              Kind="{Binding Tag, RelativeSource={RelativeSource FindAncestor, AncestorType=TabItem}}" 
                                                              VerticalAlignment="Center" 
                                                              Width="20" 
                                                              Height="20" />
                                    <Label FontFamily="Franklin Gothic" 
                                           FontSize="24" 
                                           Padding="0" 
                                           Content="{TemplateBinding Content}" 
                                           VerticalAlignment="Center"/>
                                </DockPanel>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource BasicHover}" />
            </Trigger>
            <Trigger Property="Border.IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BasicHover}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CloseWindowButtonStyle2" TargetType="{x:Type Button}" BasedOn="{StaticResource MetroWindowButtonStyle}">
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#EB2F2F" />
                <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#7C0000" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CloseWindowButtonStyle3" TargetType="{x:Type Button}" BasedOn="{StaticResource MetroWindowButtonStyle}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="{DynamicResource BasicText}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#EB2F2F" />
                <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#7C0000" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MinWindowButtonStyle2" TargetType="{x:Type Button}" BasedOn="{StaticResource MetroWindowButtonStyle}">
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Gainsboro" />
                <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="Gray" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MaxWindowButtonStyle2" TargetType="{x:Type Button}" BasedOn="{StaticResource MetroWindowButtonStyle}">
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <Style TargetType="{x:Type Controls:WindowButtonCommands}" BasedOn="{StaticResource {x:Type Controls:WindowButtonCommands}}">
        <Setter Property="LightCloseButtonStyle" Value="{StaticResource CloseWindowButtonStyle2}" />
        <Setter Property="DarkCloseButtonStyle" Value="{StaticResource CloseWindowButtonStyle2}" />
        <Setter Property="LightMinButtonStyle" Value="{StaticResource MinWindowButtonStyle2}" />
        <Setter Property="DarkMinButtonStyle" Value="{StaticResource MinWindowButtonStyle2}" />
        <Setter Property="LightMaxButtonStyle" Value="{StaticResource MaxWindowButtonStyle2}" />
        <Setter Property="DarkMaxButtonStyle" Value="{StaticResource MaxWindowButtonStyle2}" />
    </Style>

    <Style TargetType="{x:Type Dialog:BaseMetroDialog}"
                x:Key="CustomDialogStyle"
                BasedOn="{StaticResource {x:Type Dialog:BaseMetroDialog}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Dialog:BaseMetroDialog}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="DialogShownStoryboard">
                            <DoubleAnimation AccelerationRatio=".9"
                                            BeginTime="0:0:0"
                                            Duration="0:0:0.1"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Background="{TemplateBinding Background}">
                        <Border FocusVisualStyle="{x:Null}" Focusable="False">
                            <Grid Margin="0,15">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <ContentPresenter Grid.Row="0"
                                                Content="{TemplateBinding DialogTop}" />
                                <Grid Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="2*" />
                                        <ColumnDefinition Width="96*" />
                                        <ColumnDefinition Width="2*" />
                                    </Grid.ColumnDefinitions>
                                    <!--  Content area  -->
                                    <Grid Grid.Column="1"  Margin="0">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <ContentPresenter Grid.Row="1" Width="Auto" Content="{TemplateBinding Content}" />
                                    </Grid>
                                </Grid>
                                <ContentPresenter Grid.Row="2" Content="{TemplateBinding DialogBottom}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{StaticResource DialogShownStoryboard}" x:Name="ScaleAndFadeOut"/>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FwFormatComboBoxItem" TargetType="ComboBoxItem" BasedOn="{StaticResource MetroComboBoxItem}">
        <Setter Property="IsEnabled" Value="True"/>
        <Style.Triggers>
            <Trigger Property="Content" Value="{x:Static BSL430_NET_FW:FwTools+FwFormat.AUTO}">
                <Setter Property="IsEnabled" Value="False"/>
                <Setter Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="Content" Value="{x:Static BSL430_NET_FW:FwTools+FwFormat.ELF}">
                <Setter Property="IsEnabled" Value="False"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FwValidState" TargetType="TextBlock" BasedOn="{StaticResource MetroTextBlock}">
        <Setter Property="Text" Value="VALID"/>
        <Setter Property="Foreground" Value="Green"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ValidateData.Valid, Mode=OneWay}" Value="False">
                <Setter Property="Text" Value="INVALID"/>
                <Setter Property="Foreground" Value="Red"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FwInvalidClear" TargetType="TextBox" BasedOn="{StaticResource MetroTextBox}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=State, Path=Text}" Value="INVALID">
                <Setter Property="Foreground" Value="Transparent"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
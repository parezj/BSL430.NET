.TH "RJCP.IO.Ports.Native.Unix.INativeSerialDll" 3 "Sat Jun 22 2019" "Version 1.2.1" "BSL430.NET" \" -*- nroff -*-
.ad l
.nh
.SH NAME
RJCP.IO.Ports.Native.Unix.INativeSerialDll
.SH SYNOPSIS
.br
.PP
.PP
Inherited by \fBRJCP\&.IO\&.Ports\&.Native\&.Unix\&.SerialUnix\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "string \fBserial_version\fP ()"
.br
.ti -1c
.RI "\fBSafeSerialHandle\fP \fBserial_init\fP ()"
.br
.ti -1c
.RI "void \fBserial_terminate\fP (\fBSafeSerialHandle\fP handle)"
.br
.ti -1c
.RI "\fBPortDescription\fP [] \fBserial_getports\fP (\fBSafeSerialHandle\fP handle)"
.br
.ti -1c
.RI "int \fBserial_setdevicename\fP (\fBSafeSerialHandle\fP handle, string deviceName)"
.br
.ti -1c
.RI "string \fBserial_getdevicename\fP (\fBSafeSerialHandle\fP handle)"
.br
.ti -1c
.RI "int \fBserial_setbaud\fP (\fBSafeSerialHandle\fP handle, int baud)"
.br
.ti -1c
.RI "int \fBserial_getbaud\fP (\fBSafeSerialHandle\fP handle, out int baud)"
.br
.ti -1c
.RI "int \fBserial_setdatabits\fP (\fBSafeSerialHandle\fP handle, int databits)"
.br
.ti -1c
.RI "int \fBserial_getdatabits\fP (\fBSafeSerialHandle\fP handle, out int databits)"
.br
.ti -1c
.RI "int \fBserial_setparity\fP (\fBSafeSerialHandle\fP handle, \fBParity\fP parity)"
.br
.ti -1c
.RI "int \fBserial_getparity\fP (\fBSafeSerialHandle\fP handle, out \fBParity\fP parity)"
.br
.ti -1c
.RI "int \fBserial_setstopbits\fP (\fBSafeSerialHandle\fP handle, \fBStopBits\fP stopbits)"
.br
.ti -1c
.RI "int \fBserial_getstopbits\fP (\fBSafeSerialHandle\fP handle, out \fBStopBits\fP stopbits)"
.br
.ti -1c
.RI "int \fBserial_setdiscardnull\fP (\fBSafeSerialHandle\fP handle, bool discardNull)"
.br
.ti -1c
.RI "int \fBserial_getdiscardnull\fP (\fBSafeSerialHandle\fP handle, out bool discardNull)"
.br
.ti -1c
.RI "int \fBserial_setparityreplace\fP (\fBSafeSerialHandle\fP handle, int parityReplace)"
.br
.ti -1c
.RI "int \fBserial_getparityreplace\fP (\fBSafeSerialHandle\fP handle, out int parityreplace)"
.br
.ti -1c
.RI "int \fBserial_settxcontinueonxoff\fP (\fBSafeSerialHandle\fP handle, bool txContinueOnXOff)"
.br
.ti -1c
.RI "int \fBserial_gettxcontinueonxoff\fP (\fBSafeSerialHandle\fP handle, out bool txContinueOnXOff)"
.br
.ti -1c
.RI "int \fBserial_setxofflimit\fP (\fBSafeSerialHandle\fP handle, int xofflimit)"
.br
.ti -1c
.RI "int \fBserial_getxofflimit\fP (\fBSafeSerialHandle\fP handle, out int xofflimit)"
.br
.ti -1c
.RI "int \fBserial_setxonlimit\fP (\fBSafeSerialHandle\fP handle, int xonlimit)"
.br
.ti -1c
.RI "int \fBserial_getxonlimit\fP (\fBSafeSerialHandle\fP handle, out int xonlimit)"
.br
.ti -1c
.RI "int \fBserial_sethandshake\fP (\fBSafeSerialHandle\fP handle, \fBHandshake\fP handshake)"
.br
.ti -1c
.RI "int \fBserial_gethandshake\fP (\fBSafeSerialHandle\fP handle, out \fBHandshake\fP handshake)"
.br
.ti -1c
.RI "int \fBserial_open\fP (\fBSafeSerialHandle\fP handle)"
.br
.ti -1c
.RI "int \fBserial_close\fP (\fBSafeSerialHandle\fP handle)"
.br
.ti -1c
.RI "int \fBserial_isopen\fP (\fBSafeSerialHandle\fP handle, out bool isOpen)"
.br
.ti -1c
.RI "int \fBserial_setproperties\fP (\fBSafeSerialHandle\fP handle)"
.br
.ti -1c
.RI "int \fBserial_getproperties\fP (\fBSafeSerialHandle\fP handle)"
.br
.ti -1c
.RI "int \fBserial_getdcd\fP (\fBSafeSerialHandle\fP handle, out bool dcd)"
.br
.ti -1c
.RI "int \fBserial_getri\fP (\fBSafeSerialHandle\fP handle, out bool ri)"
.br
.ti -1c
.RI "int \fBserial_getdsr\fP (\fBSafeSerialHandle\fP handle, out bool dsr)"
.br
.ti -1c
.RI "int \fBserial_getcts\fP (\fBSafeSerialHandle\fP handle, out bool cts)"
.br
.ti -1c
.RI "int \fBserial_setdtr\fP (\fBSafeSerialHandle\fP handle, bool dtr)"
.br
.ti -1c
.RI "int \fBserial_getdtr\fP (\fBSafeSerialHandle\fP handle, out bool dtr)"
.br
.ti -1c
.RI "int \fBserial_setrts\fP (\fBSafeSerialHandle\fP handle, bool rts)"
.br
.ti -1c
.RI "int \fBserial_getrts\fP (\fBSafeSerialHandle\fP handle, out bool rts)"
.br
.ti -1c
.RI "int \fBserial_setbreak\fP (\fBSafeSerialHandle\fP handle, bool breakState)"
.br
.ti -1c
.RI "int \fBserial_getbreak\fP (\fBSafeSerialHandle\fP handle, out bool breakState)"
.br
.ti -1c
.RI "string \fBserial_error\fP (\fBSafeSerialHandle\fP handle)"
.br
.ti -1c
.RI "\fBSysErrNo\fP \fBnetfx_errno\fP (int errno)"
.br
.ti -1c
.RI "string \fBnetfx_errstring\fP (int errno)"
.br
.ti -1c
.RI "WaitForModemEvent \fBserial_waitformodemevent\fP (\fBSafeSerialHandle\fP handle, WaitForModemEvent mevent)"
.br
.ti -1c
.RI "int \fBserial_abortwaitformodemevent\fP (\fBSafeSerialHandle\fP handle)"
.br
.ti -1c
.RI "SerialReadWriteEvent \fBserial_waitforevent\fP (\fBSafeSerialHandle\fP handle, SerialReadWriteEvent rwevent, int timeout)"
.br
.ti -1c
.RI "int \fBserial_abortwaitforevent\fP (\fBSafeSerialHandle\fP handle)"
.br
.ti -1c
.RI "int \fBserial_read\fP (\fBSafeSerialHandle\fP handle, IntPtr data, int length)"
.br
.ti -1c
.RI "int \fBserial_write\fP (\fBSafeSerialHandle\fP handle, IntPtr data, int length)"
.br
.ti -1c
.RI "int \fBserial_discardinbuffer\fP (\fBSafeSerialHandle\fP handle)"
.br
.ti -1c
.RI "int \fBserial_discardoutbuffer\fP (\fBSafeSerialHandle\fP handle)"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "int \fBerrno\fP\fC [get]\fP"
.br
.in -1c

.SH "Author"
.PP 
Generated automatically by Doxygen for BSL430\&.NET from the source code\&.
